;
; File generated by cc65 v 2.15 - Git c768de1
;
	.fopt		compiler,"cc65 v 2.15 - Git c768de1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_sprintf
	.import		_malloc
	.import		_realloc
	.import		_free
	.import		_strcmp
	.import		_strcpy
	.import		_strlen
	.import		_strncpy
	.import		_strstr
	.import		_isalnum
	.import		_isdigit
	.export		_realloc_it
	.export		_toC64Case
	.export		_toLowerCase
	.export		_toLowerCaseContains
	.export		_toLowerCaseCompare
	.export		_replace_str
	.export		_numItemsInCharArray
	.export		_isStringNumeric
	.export		_isStringAlpha

.segment	"RODATA"

L008F:
	.byte	$25,$53,$25,$53,$00

; ---------------------------------------------------------------
; __near__ void * __near__ realloc_it (__near__ void *, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_realloc_it: near

.segment	"BSS"

L000A:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldy     #$03
	jsr     ldaxysp
	jsr     _realloc
	sta     L000A
	stx     L000A+1
	lda     L000A
	ora     L000A+1
	bne     L000E
	ldy     #$03
	jsr     ldaxysp
	jsr     _free
L000E:	lda     L000A
	ldx     L000A+1
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ toC64Case (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_toC64Case: near

.segment	"BSS"

L0014:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0014
	sta     L0014+1
	jmp     L0018
L0016:	jsr     ldax0sp
	clc
	adc     L0014
	sta     ptr1
	txa
	adc     L0014+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$61
	bcc     L001B
	jsr     ldax0sp
	clc
	adc     L0014
	sta     ptr1
	txa
	adc     L0014+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$7B
	bcs     L001B
	jsr     ldax0sp
	clc
	adc     L0014
	sta     sreg
	txa
	adc     L0014+1
	sta     sreg+1
	jsr     ldax0sp
	clc
	adc     L0014
	sta     ptr1
	txa
	adc     L0014+1
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	ldy     #$60
	jsr     incaxy
	ldy     #$00
	sta     (sreg),y
L001B:	lda     L0014
	ldx     L0014+1
	jsr     incax1
	sta     L0014
	stx     L0014+1
L0018:	jsr     ldax0sp
	clc
	adc     L0014
	sta     ptr1
	txa
	adc     L0014+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L0016
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ toLowerCase (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_toLowerCase: near

.segment	"BSS"

L0027:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0027
	sta     L0027+1
	jmp     L002B
L0029:	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$61
	bcc     L002E
	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$7B
	bcs     L002E
	jsr     ldax0sp
	clc
	adc     L0027
	sta     sreg
	txa
	adc     L0027+1
	sta     sreg+1
	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	ldy     #$20
	jmp     L00BE
L002E:	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$C1
	bcc     L0039
	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$DB
	bcs     L0039
	jsr     ldax0sp
	clc
	adc     L0027
	sta     sreg
	txa
	adc     L0027+1
	sta     sreg+1
	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	ldy     #$80
L00BE:	jsr     decaxy
	ldy     #$00
	sta     (sreg),y
L0039:	lda     L0027
	ldx     L0027+1
	jsr     incax1
	sta     L0027
	stx     L0027+1
L002B:	jsr     ldax0sp
	clc
	adc     L0027
	sta     ptr1
	txa
	adc     L0027+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jne     L0029
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ toLowerCaseContains (__near__ unsigned char *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_toLowerCaseContains: near

.segment	"BSS"

L0045:
	.res	1,$00
L0047:
	.res	2,$00
L004C:
	.res	24,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0045
	ldy     #$03
	jsr     ldaxysp
	jsr     _strlen
	jsr     _malloc
	sta     L0047
	stx     L0047+1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _strcpy
	lda     #<(L004C)
	ldx     #>(L004C)
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     _strcpy
	lda     L0047
	ldx     L0047+1
	jsr     _toLowerCase
	lda     #<(L004C)
	ldx     #>(L004C)
	jsr     _toLowerCase
	lda     L0047
	ldx     L0047+1
	jsr     pushax
	lda     #<(L004C)
	ldx     #>(L004C)
	jsr     _strstr
	cpx     #$00
	bne     L00BF
	cmp     #$00
	beq     L0057
L00BF:	lda     #$01
	sta     L0045
L0057:	lda     L0047
	ldx     L0047+1
	jsr     _free
	ldx     #$00
	lda     L0045
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ toLowerCaseCompare (__near__ unsigned char *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_toLowerCaseCompare: near

.segment	"BSS"

L0062:
	.res	1,$00
L0065:
	.res	24,$00
L0067:
	.res	24,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0062
	lda     #<(L0065)
	ldx     #>(L0065)
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _strcpy
	lda     #<(L0067)
	ldx     #>(L0067)
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     _strcpy
	lda     #<(L0065)
	ldx     #>(L0065)
	jsr     _toLowerCase
	lda     #<(L0067)
	ldx     #>(L0067)
	jsr     _toLowerCase
	lda     #<(L0065)
	ldx     #>(L0065)
	jsr     pushax
	lda     #<(L0067)
	ldx     #>(L0067)
	jsr     _strcmp
	cpx     #$00
	bne     L0072
	cmp     #$00
	bne     L00C0
	lda     #$01
	sta     L0062
L0072:	ldx     #$00
L00C0:	lda     L0062
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; __near__ unsigned char * __near__ replace_str (__near__ unsigned char *, __near__ unsigned char *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_replace_str: near

.segment	"BSS"

L007C:
	.res	128,$00
L007D:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	jsr     ldaxysp
	jsr     _strstr
	sta     L007D
	stx     L007D+1
	jsr     bnegax
	beq     L007E
	ldy     #$05
	jsr     ldaxysp
	jmp     incsp6
L007E:	lda     #<(L007C)
	ldx     #>(L007C)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	lda     L007D
	sec
	ldy     #$08
	sbc     (sp),y
	pha
	lda     L007D+1
	iny
	sbc     (sp),y
	tax
	pla
	jsr     _strncpy
	lda     L007D
	sec
	ldy     #$04
	sbc     (sp),y
	pha
	lda     L007D+1
	iny
	sbc     (sp),y
	tax
	pla
	clc
	adc     #<(L007C)
	sta     ptr1
	txa
	adc     #>(L007C)
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	lda     L007D
	sec
	ldy     #$04
	sbc     (sp),y
	pha
	lda     L007D+1
	iny
	sbc     (sp),y
	tax
	pla
	clc
	adc     #<(L007C)
	tay
	txa
	adc     #>(L007C)
	tax
	tya
	jsr     pushax
	lda     #<(L008F)
	ldx     #>(L008F)
	jsr     pushax
	ldy     #$07
	jsr     pushwysp
	lda     L007D
	ldx     L007D+1
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     _strlen
	jsr     tosaddax
	jsr     pushax
	ldy     #$08
	jsr     _sprintf
	lda     #<(L007C)
	ldx     #>(L007C)
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; int __near__ numItemsInCharArray (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_numItemsInCharArray: near

.segment	"BSS"

L0096:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	jsr     ldax0sp
	jsr     shrax1
	sta     L0096
	stx     L0096+1
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; int __near__ isStringNumeric (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_isStringNumeric: near

.segment	"BSS"

L009A:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L009A
	sta     L009A+1
	sta     L009A
	sta     L009A+1
L009C:	jsr     ldax0sp
	clc
	adc     L009A
	sta     ptr1
	txa
	adc     L009A+1
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	beq     L00C1
	jsr     ldax0sp
	clc
	adc     L009A
	sta     ptr1
	txa
	adc     L009A+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	ldx     #$00
	jsr     _isdigit
	stx     tmp1
	ora     tmp1
	bne     L009E
	tax
	jmp     incsp2
L009E:	lda     L009A
	ldx     L009A+1
	jsr     incax1
	sta     L009A
	stx     L009A+1
	jmp     L009C
L00C1:	lda     #$01
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; int __near__ isStringAlpha (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_isStringAlpha: near

.segment	"CODE"

	jsr     pushax
	jmp     L00AE
L00AC:	ldx     #$00
	lda     #$01
	jsr     addeq0sp
L00AE:	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	ldx     #$00
	jsr     _isalnum
	stx     tmp1
	ora     tmp1
	bne     L00AC
	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     booleq
	jmp     incsp2

.endproc

