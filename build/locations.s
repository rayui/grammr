;
; File generated by cc65 v 2.15 - Git c768de1
;
	.fopt		compiler,"cc65 v 2.15 - Git c768de1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_malloc
	.import		_strcat
	.import		_strcpy
	.import		_toLowerCaseCompare
	.export		_createLocation
	.export		_createLocationList
	.export		_findLocationByName
	.export		_getAllLocationNames
	.export		_locationHasExit
	.export		_locationDescription
	.import		_locations

.segment	"RODATA"

L007D:
	.byte	$2C,$20,$00

; ---------------------------------------------------------------
; __near__ struct Location * __near__ createLocation (__near__ unsigned char *, __near__ unsigned char *, __near__ struct LocationList *, __near__ struct ItemList *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_createLocation: near

.segment	"BSS"

L000A:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldx     #$02
	lda     #$46
	jsr     _malloc
	sta     L000A
	stx     L000A+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     _strcpy
	lda     L000A
	ldx     L000A+1
	ldy     #$40
	jsr     incaxy
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     _strcpy
	lda     L000A
	ldx     L000A+1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$01
	clc
	pha
	lda     #$02
	adc     (sp),y
	sta     (sp),y
	pla
	ldy     #$40
	jsr     staxspidx
	lda     L000A
	ldx     L000A+1
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	clc
	pha
	lda     #$02
	adc     (sp),y
	sta     (sp),y
	pla
	ldy     #$42
	jsr     staxspidx
	lda     L000A
	ldx     L000A+1
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; __near__ struct LocationList * __near__ createLocationList (__near__ __near__ struct LocationList * *, __near__ struct Location *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_createLocationList: near

.segment	"BSS"

L0019:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _malloc
	sta     L0019
	stx     L0019+1
	sta     ptr1
	stx     ptr1+1
	jsr     ldax0sp
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	lda     L0019
	sta     sreg
	lda     L0019+1
	sta     sreg+1
	ldy     #$03
	jsr     ldaxysp
	jsr     ldaxi
	ldy     #$02
	sta     (sreg),y
	iny
	txa
	sta     (sreg),y
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     L0019
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     L0019+1
	sta     (ptr1),y
	lda     L0019
	ldx     L0019+1
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; __near__ struct Location * __near__ findLocationByName (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_findLocationByName: near

.segment	"BSS"

L0028:
	.res	2,$00
L002A:
	.res	2,$00
L002B:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0028
	sta     L0028+1
	lda     _locations
	sta     L002B
	lda     _locations+1
	jmp     L0089
L0030:	lda     #$00
	clc
	adc     L002B
	pha
	lda     #$02
	adc     L002B+1
	tax
	pla
	ldy     #$45
	jsr     ldaxidx
	sta     L002A
	stx     L002A+1
	jsr     pushw0sp
	lda     L002B
	ldx     L002B+1
	jsr     _toLowerCaseCompare
	tax
	beq     L0039
	lda     L002B
	sta     L0028
	lda     L002B+1
	sta     L0028+1
L0039:	lda     L002A
	sta     L002B
	lda     L002A+1
L0089:	sta     L002B+1
	lda     L002B
	ora     L002B+1
	bne     L0030
	lda     L0028
	ldx     L0028+1
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ getAllLocationNames (__near__ struct LocationList *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_getAllLocationNames: near

.segment	"BSS"

L0063:
	.res	2,$00
L0064:
	.res	2,$00
L0065:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	sta     L0065
	stx     L0065+1
	jmp     L006C
L006A:	lda     L0065
	ldx     L0065+1
	ldy     #$03
	jsr     ldaxidx
	sta     L0064
	stx     L0064+1
	lda     L0065
	ldx     L0065+1
	jsr     ldaxi
	sta     L0063
	stx     L0063+1
	jsr     pushw0sp
	lda     L0063
	ldx     L0063+1
	jsr     _strcat
	lda     L0065
	ldx     L0065+1
	ldy     #$03
	jsr     ldaxidx
	cpx     #$00
	bne     L008A
	cmp     #$00
	beq     L0078
L008A:	jsr     pushw0sp
	lda     #<(L007D)
	ldx     #>(L007D)
	jsr     _strcat
L0078:	lda     L0064
	sta     L0065
	lda     L0064+1
	sta     L0065+1
L006C:	lda     L0065
	ora     L0065+1
	bne     L006A
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; int __near__ locationHasExit (__near__ unsigned char *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_locationHasExit: near

.segment	"BSS"

L0044:
	.res	1,$00
L0046:
	.res	2,$00
L0049:
	.res	2,$00
L004A:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0044
	ldy     #$03
	jsr     ldaxysp
	jsr     _findLocationByName
	sta     L0046
	stx     L0046+1
	sta     ptr1
	stx     ptr1+1
	lda     #$00
	clc
	adc     ptr1
	pha
	lda     #$02
	adc     ptr1+1
	tax
	pla
	ldy     #$41
	jsr     ldaxidx
	sta     L004A
	stx     L004A+1
	jmp     L0051
L004F:	lda     L004A
	ldx     L004A+1
	ldy     #$03
	jsr     ldaxidx
	sta     L0049
	stx     L0049+1
	lda     L004A
	ldx     L004A+1
	jsr     pushw
	ldy     #$03
	jsr     ldaxysp
	jsr     _toLowerCaseCompare
	tax
	beq     L0058
	lda     #$01
	sta     L0044
L0058:	lda     L0049
	sta     L004A
	lda     L0049+1
	sta     L004A+1
L0051:	lda     L004A
	ora     L004A+1
	bne     L004F
	lda     L0044
	ldx     #$00
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ locationDescription (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_locationDescription: near

.segment	"BSS"

L0083:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	jsr     ldax0sp
	jsr     _findLocationByName
	sta     L0083
	stx     L0083+1
	jsr     pushw0sp
	lda     L0083
	ldx     L0083+1
	ldy     #$40
	jsr     incaxy
	jsr     _strcpy
	jmp     incsp2

.endproc

