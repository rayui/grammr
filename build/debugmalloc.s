;
; File generated by cc65 v 2.15 - Git c768de1
;
	.fopt		compiler,"cc65 v 2.15 - Git c768de1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_malloc
	.import		_free
	.import		__heapmemavail
	.import		_memset
	.import		_gotoxy
	.import		_wherex
	.import		_wherey
	.import		_cputsxy
	.import		_cprintf
	.import		_cgetc
	.import		_textcolor
	.export		_debugmalloc
	.export		_debugfree

.segment	"DATA"

_debuginit:
	.byte	$00
_chunks:
	.byte	$00

.segment	"RODATA"

L00A0:
	.byte	$44,$45,$42,$55,$47,$46,$52,$45,$45,$20,$42,$45,$46,$4F,$52,$45
	.byte	$20,$44,$45,$42,$55,$47,$4D,$41,$4C,$4C,$4F,$43,$21,$00
L00E2:
	.byte	$CD,$45,$4D,$20,$42,$45,$46,$4F,$52,$45,$20,$25,$30,$34,$58,$20
	.byte	$4F,$56,$45,$52,$57,$52,$49,$54,$54,$45,$4E,$21,$00
L0104:
	.byte	$C6,$52,$45,$45,$27,$44,$20,$4D,$4F,$52,$45,$20,$54,$48,$41,$4E
	.byte	$20,$4D,$41,$4C,$4C,$4F,$43,$27,$44,$21,$20,$20,$00
L00F1:
	.byte	$CD,$45,$4D,$20,$41,$46,$54,$45,$52,$20,$25,$30,$34,$58,$20,$4F
	.byte	$56,$45,$52,$57,$52,$49,$54,$54,$45,$4E,$21,$20,$00
L00C3:
	.byte	$46,$52,$45,$45,$20,$4F,$46,$20,$55,$4E,$4D,$41,$4C,$4C,$4F,$43
	.byte	$45,$44,$20,$43,$48,$55,$4E,$4B,$21,$20,$20,$00
L006A:
	.byte	$C3,$48,$55,$4E,$4B,$20,$54,$41,$42,$4C,$45,$20,$46,$55,$4C,$4C
	.byte	$21,$20,$20,$00
L007E:
	.byte	$CF,$55,$54,$20,$4F,$46,$20,$4D,$45,$4D,$4F,$52,$59,$21,$20,$20
	.byte	$00
L00D3:
	.byte	$46,$52,$45,$45,$28,$CE,$D5,$CC,$CC,$29,$21,$20,$20,$00
L0026:
	.byte	$4D,$41,$4C,$4C,$4F,$43,$28,$30,$29,$21,$20,$20,$00
L0108:
	.byte	$46,$25,$36,$44,$20,$43,$25,$33,$44,$00
L0032	:=	L0108+0

.segment	"BSS"

_chunk:
	.res	32,$00
_x:
	.res	1,$00
_y:
	.res	1,$00
_c:
	.res	1,$00

; ---------------------------------------------------------------
; __near__ void * __near__ __fastcall__ debugmalloc (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_debugmalloc: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp3
	lda     _debuginit
	bne     L000A
	inc     _debuginit
	ldy     #$1F
L0012:	sta     _chunk,y
	dey
	bpl     L0012
L000A:	jsr     _wherex
	sta     _x
	jsr     _wherey
	sta     _y
	lda     #$0E
	jsr     _textcolor
	sta     _c
	ldy     #$03
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L001E
	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L0026)
	ldx     #>(L0026)
	jsr     _cputsxy
	jsr     _cgetc
L001E:	lda     #$1C
	jsr     pusha
	lda     #$18
	jsr     _gotoxy
	ldy     #$04
	jsr     ldaxysp
	jsr     incax6
	jsr     _malloc
	ldy     #$01
	jsr     staxysp
	lda     #$0E
	jsr     _textcolor
	lda     #<(L0032)
	ldx     #>(L0032)
	jsr     pushax
	jsr     __heapmemavail
	jsr     pushax
	ldx     #$00
	inc     _chunks
	lda     _chunks
	bpl     L0036
	dex
L0036:	jsr     pushax
	ldy     #$06
	jsr     _cprintf
	ldy     #$02
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L0037
	iny
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$04
	lda     (sp),y
	ldy     #$01
	sta     (ptr1),y
	iny
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$55
	ldy     #$02
	sta     (ptr1),y
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$AA
	ldy     #$03
	sta     (ptr1),y
	iny
	jsr     ldaxysp
	jsr     incax4
	clc
	ldy     #$01
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	lda     #$55
	ldy     #$00
	sta     (ptr1),y
	ldy     #$04
	jsr     ldaxysp
	jsr     incax5
	clc
	ldy     #$01
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	lda     #$AA
	ldy     #$00
	sta     (ptr1),y
	tya
L0118:	sta     (sp),y
	cmp     #$10
	bcs     L004C
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L0119
	inx
	clc
L0119:	adc     #<(_chunk)
	tay
	txa
	adc     #>(_chunk)
	tax
	tya
	jsr     ldaxi
	cpx     #$00
	bne     L004D
	cmp     #$00
	bne     L004D
	lda     (sp,x)
	asl     a
	bcc     L011A
	inx
	clc
L011A:	adc     #<(_chunk)
	sta     ptr1
	txa
	adc     #>(_chunk)
	sta     ptr1+1
	ldy     #$02
	jsr     ldaxysp
	jsr     incax4
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	lda     _x
	jsr     pusha
	lda     _y
	jsr     _gotoxy
	lda     _c
	jsr     _textcolor
	ldy     #$02
	jsr     ldaxysp
	jsr     incax4
	jmp     incsp5
L004D:	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L0118
L004C:	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L006A)
	ldx     #>(L006A)
	jsr     _cputsxy
	jsr     _cgetc
	lda     _x
	jsr     pusha
	lda     _y
	jsr     _gotoxy
	lda     _c
	jsr     _textcolor
	ldy     #$02
	jsr     ldaxysp
	jsr     incax4
	jmp     incsp5
L0037:	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L007E)
	ldx     #>(L007E)
	jsr     _cputsxy
	jsr     _cgetc
	lda     _x
	jsr     pusha
	lda     _y
	jsr     _gotoxy
	lda     _c
	jsr     _textcolor
	ldx     #$00
	txa
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ __fastcall__ debugfree (__near__ void *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_debugfree: near

.segment	"CODE"

	jsr     pushax
	jsr     pushw0sp
	jsr     decsp3
	jsr     _wherex
	sta     _x
	jsr     _wherey
	sta     _y
	lda     #$0E
	jsr     _textcolor
	sta     _c
	lda     _debuginit
	bne     L0099
	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L00A0)
	ldx     #>(L00A0)
	jsr     _cputsxy
	jsr     _cgetc
	ldy     #$04
	jsr     ldaxysp
	jsr     decax4
	jsr     _free
	jmp     L00D6
L0099:	lda     #$00
	tay
L011F:	sta     (sp),y
	cmp     #$10
	bcs     L0123
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L0120
	inx
	clc
L0120:	adc     #<(_chunk)
	tay
	txa
	adc     #>(_chunk)
	tax
	tya
	jsr     ldaxi
	ldy     #$05
	cmp     (sp),y
	bne     L00B0
	txa
	iny
	cmp     (sp),y
	bne     L00B0
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L0121
	inx
	clc
L0121:	adc     #<(_chunk)
	sta     ptr1
	txa
	adc     #>(_chunk)
	sta     ptr1+1
	tya
	sta     (ptr1),y
	iny
	sta     (ptr1),y
	dey
	jmp     L0123
L00B0:	ldy     #$00
	clc
	lda     #$01
	adc     (sp),y
	jmp     L011F
L0123:	lda     (sp),y
	cmp     #$10
	bne     L00BC
	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L00C3)
	ldx     #>(L00C3)
	jsr     _cputsxy
	jsr     _cgetc
L00BC:	lda     #$00
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	lda     #$FF
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$FC
	lda     (ptr1),y
	jsr     pusha0
	lda     #$00
	clc
	ldy     #$05
	adc     (sp),y
	sta     ptr1
	lda     #$FF
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$FD
	lda     (ptr1),y
	tax
	lda     #$00
	jsr     tosorax
	ldy     #$01
	jsr     staxysp
	ldy     #$05
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L00CB
	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L00D3)
	ldx     #>(L00D3)
	jsr     _cputsxy
	jsr     _cgetc
	jmp     L00D6
L00CB:	lda     #$00
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	lda     #$FF
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$FE
	lda     (ptr1),y
	cmp     #$55
	bne     L0124
	ldx     #$FF
	txa
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$AA
	beq     L00D7
L0124:	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     _gotoxy
	lda     #<(L00E2)
	ldx     #>(L00E2)
	jsr     pushax
	ldy     #$0A
	jsr     pushwysp
	ldy     #$04
	jsr     _cprintf
	jsr     _cgetc
L00D7:	ldy     #$02
	jsr     ldaxysp
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$55
	bne     L0125
	ldy     #$02
	jsr     ldaxysp
	jsr     incax1
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$AA
	beq     L00E6
L0125:	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     _gotoxy
	lda     #<(L00F1)
	ldx     #>(L00F1)
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	clc
	ldy     #$07
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     decax1
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
	jsr     _cgetc
L00E6:	ldy     #$06
	jsr     ldaxysp
	jsr     decax4
	jsr     _free
	lda     #$0E
	jsr     _textcolor
	lda     #$1C
	jsr     pusha
	lda     #$18
	jsr     _gotoxy
	dec     _chunks
	lda     _chunks
	asl     a
	bcc     L00FC
	lda     #$0A
	jsr     _textcolor
	lda     #$00
	jsr     pusha
	lda     #$18
	jsr     pusha
	lda     #<(L0104)
	ldx     #>(L0104)
	jsr     _cputsxy
	jsr     _cgetc
L00FC:	lda     #<(L0108)
	ldx     #>(L0108)
	jsr     pushax
	jsr     __heapmemavail
	jsr     pushax
	ldx     #$00
	lda     _chunks
	bpl     L010C
	dex
L010C:	jsr     pushax
	ldy     #$06
	jsr     _cprintf
L00D6:	lda     _x
	jsr     pusha
	lda     _y
	jsr     _gotoxy
	lda     _c
	jsr     _textcolor
	jmp     incsp7

.endproc

