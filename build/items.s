;
; File generated by cc65 v 2.15 - Git c768de1
;
	.fopt		compiler,"cc65 v 2.15 - Git c768de1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_malloc
	.import		_strcat
	.import		_strcpy
	.import		_strlen
	.import		_toLowerCaseCompare
	.export		_createItem
	.export		_createItemList
	.export		_findItemByName
	.export		_findItemInList
	.export		_inventoryHasItem
	.export		_addItemToList
	.export		_addItemToInventory
	.export		_getAllItemNames
	.import		_items
	.import		_inventory

.segment	"RODATA"

L00BB:
	.byte	$2C,$20,$00

; ---------------------------------------------------------------
; __near__ struct Item * __near__ createItem (__near__ unsigned char *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_createItem: near

.segment	"BSS"

L000B:
	.res	1,$00
L000D:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L000B
	tax
	lda     #$0D
	jsr     _malloc
	sta     L000D
	stx     L000D+1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _strlen
	jsr     incax1
	jsr     _malloc
	ldy     #$00
	jsr     staxspidx
	lda     L000D
	ldx     L000D+1
	jsr     pushw
	ldy     #$05
	jsr     ldaxysp
	jsr     _strcpy
	lda     L000D
	ldx     L000D+1
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     _strlen
	jsr     incax1
	jsr     _malloc
	ldy     #$02
	jsr     staxspidx
	lda     L000D
	ldx     L000D+1
	iny
	jsr     pushwidx
	ldy     #$03
	jsr     ldaxysp
	jsr     _strcpy
	lda     #$00
L00C2:	sta     L000B
	cmp     #$05
	bcs     L0021
	lda     L000D
	ldx     L000D+1
	jsr     incax4
	clc
	adc     L000B
	bcc     L00C0
	inx
L00C0:	sta     ptr1
	stx     ptr1+1
	lda     #$FF
	ldy     #$00
	sta     (ptr1),y
	lda     L000B
	clc
	adc     #$01
	jmp     L00C2
L0021:	lda     L000D
	sta     ptr1
	lda     L000D+1
	sta     ptr1+1
	lda     _items
	ldy     #$0B
	sta     (ptr1),y
	iny
	lda     _items+1
	sta     (ptr1),y
	lda     L000D
	sta     _items
	lda     L000D+1
	sta     _items+1
	lda     L000D
	ldx     L000D+1
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; __near__ struct ItemList * __near__ createItemList (__near__ __near__ struct ItemList * *, __near__ struct Item *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_createItemList: near

.segment	"BSS"

L0036:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     _malloc
	sta     L0036
	stx     L0036+1
	sta     ptr1
	stx     ptr1+1
	jsr     ldax0sp
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	lda     L0036
	sta     sreg
	lda     L0036+1
	sta     sreg+1
	ldy     #$03
	jsr     ldaxysp
	jsr     ldaxi
	ldy     #$02
	sta     (sreg),y
	iny
	txa
	sta     (sreg),y
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     L0036
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     L0036+1
	sta     (ptr1),y
	lda     L0036
	ldx     L0036+1
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; __near__ struct Item * __near__ findItemByName (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_findItemByName: near

.segment	"BSS"

L0045:
	.res	2,$00
L0046:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     _items
	sta     L0046
	lda     _items+1
	jmp     L00C3
L004B:	lda     L0046
	ldx     L0046+1
	ldy     #$0C
	jsr     ldaxidx
	sta     L0045
	stx     L0045+1
	jsr     pushw0sp
	lda     L0046
	ldx     L0046+1
	jsr     ldaxi
	jsr     _toLowerCaseCompare
	tax
	beq     L0054
	lda     L0046
	ldx     L0046+1
	jmp     incsp2
L0054:	lda     L0045
	sta     L0046
	lda     L0045+1
L00C3:	sta     L0046+1
	lda     L0046
	ora     L0046+1
	bne     L004B
	tax
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; __near__ struct Item * __near__ findItemInList (__near__ struct ItemList *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_findItemInList: near

.segment	"BSS"

L005E:
	.res	2,$00
L005F:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	sta     L005F
	stx     L005F+1
	jmp     L0066
L0064:	lda     L005F
	ldx     L005F+1
	ldy     #$03
	jsr     ldaxidx
	sta     L005E
	stx     L005E+1
	lda     L005F
	ldx     L005F+1
	jsr     ldaxi
	jsr     pushw
	ldy     #$03
	jsr     ldaxysp
	jsr     _toLowerCaseCompare
	tax
	beq     L006D
	lda     L005F
	ldx     L005F+1
	jsr     ldaxi
	jmp     incsp4
L006D:	lda     L005E
	sta     L005F
	lda     L005E+1
	sta     L005F+1
L0066:	lda     L005F
	ora     L005F+1
	bne     L0064
	tax
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ inventoryHasItem (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_inventoryHasItem: near

.segment	"BSS"

L0077:
	.res	1,$00
L0079:
	.res	2,$00
L007A:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L0077
	lda     _inventory
	sta     L007A
	lda     _inventory+1
	jmp     L00C4
L007F:	lda     L007A
	ldx     L007A+1
	ldy     #$03
	jsr     ldaxidx
	sta     L0079
	stx     L0079+1
	lda     L007A
	ldx     L007A+1
	jsr     ldaxi
	jsr     pushw
	ldy     #$03
	jsr     ldaxysp
	jsr     _toLowerCaseCompare
	tax
	beq     L0088
	lda     #$01
	sta     L0077
L0088:	lda     L0079
	sta     L007A
	lda     L0079+1
L00C4:	sta     L007A+1
	lda     L007A
	ora     L007A+1
	bne     L007F
	tax
	lda     L0077
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ addItemToList (__near__ struct ItemList *, __near__ struct Item *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_addItemToList: near

.segment	"CODE"

	jsr     pushax
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     _createItemList
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ addItemToInventory (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_addItemToInventory: near

.segment	"BSS"

L0097:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	jsr     ldax0sp
	jsr     _findItemByName
	sta     L0097
	stx     L0097+1
	cpx     #$00
	bne     L00C5
	cmp     #$00
	beq     L009A
L00C5:	lda     _inventory
	ldx     _inventory+1
	jsr     pushax
	lda     L0097
	ldx     L0097+1
	jsr     _addItemToList
L009A:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ getAllItemNames (__near__ struct ItemList *, __near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_getAllItemNames: near

.segment	"BSS"

L00A1:
	.res	2,$00
L00A2:
	.res	2,$00
L00A3:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	sta     L00A3
	stx     L00A3+1
	jmp     L00AA
L00A8:	lda     L00A3
	ldx     L00A3+1
	ldy     #$03
	jsr     ldaxidx
	sta     L00A2
	stx     L00A2+1
	lda     L00A3
	ldx     L00A3+1
	jsr     ldaxi
	sta     L00A1
	stx     L00A1+1
	jsr     pushw0sp
	lda     L00A1
	ldx     L00A1+1
	jsr     ldaxi
	jsr     _strcat
	lda     L00A3
	ldx     L00A3+1
	ldy     #$03
	jsr     ldaxidx
	cpx     #$00
	bne     L00C6
	cmp     #$00
	beq     L00B6
L00C6:	jsr     pushw0sp
	lda     #<(L00BB)
	ldx     #>(L00BB)
	jsr     _strcat
L00B6:	lda     L00A2
	sta     L00A3
	lda     L00A2+1
	sta     L00A3+1
L00AA:	lda     L00A3
	ora     L00A3+1
	bne     L00A8
	jmp     incsp4

.endproc

