;
; File generated by cc65 v 2.15 - Git c768de1
;
	.fopt		compiler,"cc65 v 2.15 - Git c768de1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_cputc
	.import		_cprintf
	.import		_cgetc
	.export		_getAndEchoKeyboardInput
	.export		_acceptInput
	.import		_str_command

.segment	"RODATA"

L0013:
	.byte	$25,$53,$20,$00
L0026:
	.byte	$0A,$0D,$00

; ---------------------------------------------------------------
; int __near__ getAndEchoKeyboardInput (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_getAndEchoKeyboardInput: near

.segment	"BSS"

L0008:
	.res	2,$00

.segment	"CODE"

	jsr     _cgetc
	ldx     #$00
	sta     L0008
	stx     L0008+1
	jsr     _cputc
	lda     L0008
	ldx     L0008+1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ acceptInput (__near__ __near__ unsigned char * *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_acceptInput: near

.segment	"BSS"

L000F:
	.res	2,$00
L0011:
	.res	2,$00

.segment	"CODE"

	jsr     pushax
	lda     #$00
	sta     L000F
	sta     L000F+1
	lda     #<(L0013)
	ldx     #>(L0013)
	jsr     pushax
	lda     #<(_str_command)
	ldx     #>(_str_command)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
	jmp     L0018
L0016:	jsr     ldax0sp
	jsr     ldaxi
	clc
	adc     L000F
	sta     ptr1
	txa
	adc     L000F+1
	sta     ptr1+1
	lda     L0011
	ldy     #$00
	sta     (ptr1),y
	lda     L000F
	ldx     L000F+1
	jsr     incax1
	sta     L000F
	stx     L000F+1
L0018:	jsr     _getAndEchoKeyboardInput
	sta     L0011
	stx     L0011+1
	cpx     #$00
	bne     L002E
	cmp     #$0D
	beq     L002C
L002E:	lda     L000F
	cmp     #$00
	lda     L000F+1
	sbc     #$02
	bvc     L001E
	eor     #$80
L001E:	bmi     L0016
L002C:	lda     #<(L0026)
	ldx     #>(L0026)
	jsr     pushax
	ldy     #$02
	jsr     _cprintf
	jsr     ldax0sp
	jsr     ldaxi
	clc
	adc     L000F
	sta     ptr1
	txa
	adc     L000F+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	jmp     incsp2

.endproc

